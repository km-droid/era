import React, { useState, useEffect } from 'react';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { faHome, faChartLine, faPlus, faUser, faEdit } from '@fortawesome/free-solid-svg-icons';
import StoreDetails from './StoreDetails';
import EditStore from './EditStore';
import { getAllStores } from './lib/datastore'; // Import the Datastore function

function App() {
  const [stores, setStores] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const [selectedStore, setSelectedStore] = useState(null);
  const [isEditing, setIsEditing] = useState(false);

  // Fetch stores from Google Cloud Datastore
  const fetchStores = async () => {
    try {
      const stores = await getAllStores(); // Fetch stores from Datastore
      setStores(stores);
    } catch (err) {
      setError(err.message); // Handle errors
    } finally {
      setLoading(false); // Stop loading
    }
  };

  // Fetch stores on component mount
  useEffect(() => {
    fetchStores();
  }, []);

  // Handle store row click
  const handleStoreClick = (store) => {
    setSelectedStore(store);
  };

  // Handle edit icon click
  const handleEditClick = (store) => {
    setSelectedStore(store);
    setIsEditing(true);
  };

  // Display loading state
  if (loading) return <div className="text-center p-4">Loading...</div>;

  // Display error state
  if (error) return <div className="text-center p-4 text-red-500">Error: {error}</div>;

  return (
    <div className="min-h-screen bg-gray-100">
      <Header />
      <div className="p-4">
        <Metrics />
        <SearchBar />
        <StoreTable stores={stores} onStoreClick={handleStoreClick} onEditClick={handleEditClick} />
      </div>
      {selectedStore && !isEditing && <StoreDetails store={selectedStore} onClose={() => setSelectedStore(null)} />}
      {selectedStore && isEditing && <EditStore store={selectedStore} onClose={() => setIsEditing(false)} />}
    </div>
  );
}

// Header Component
const Header = () => (
  <header className="bg-blue-600 text-white p-4 flex justify-between items-center">
    <div className="flex space-x-4">
      <button><FontAwesomeIcon icon={faHome} /> Home</button>
      <button><FontAwesomeIcon icon={faChartLine} /> Stats</button>
      <button><FontAwesomeIcon icon={faPlus} /> Onboard</button>
    </div>
    <div className="flex items-center">
      <FontAwesomeIcon icon={faUser} className="mr-2" />
      <span>Username</span>
    </div>
  </header>
);

// Metrics Component
const Metrics = () => (
  <div className="grid grid-cols-1 md:grid-cols-4 gap-4 mb-4">
    <MetricCard title="Edge Rollout" value="40,689" />
    <MetricCard title="Hardware Acquired" value="89,000" />
    <MetricCard title="Software Installed" value="2,040" />
    <MetricCard title="Onboarded" value="10,293" />
  </div>
);

// MetricCard Component
const MetricCard = ({ title, value }) => (
  <div className="bg-white p-4 rounded-lg shadow">
    <h3 className="text-gray-500">{title}</h3>
    <p className="text-2xl font-bold">{value}</p>
  </div>
);

// SearchBar Component
const SearchBar = () => (
  <div className="mb-4">
    <input type="text" placeholder="Search Stores..." className="w-full p-2 border rounded" />
  </div>
);

// StoreTable Component
const StoreTable = ({ stores, onStoreClick, onEditClick }) => (
  <div className="overflow-x-auto bg-white rounded-lg shadow">
    <table className="min-w-full">
      <thead>
        <tr className="bg-gray-200">
          <th className="p-2">Store Number</th>
          <th className="p-2">Location</th>
          <th className="p-2">Phase</th>
          <th className="p-2">Status</th>
          <th className="p-2">Actions</th>
        </tr>
      </thead>
      <tbody>
        {stores.map((store) => (
          <tr key={store.id} className="hover:bg-gray-100 cursor-pointer" onClick={() => onStoreClick(store)}>
            <td className="p-2">{store.number}</td>
            <td className="p-2">{store.location}</td>
            <td className="p-2">{store.phase}</td>
            <td className="p-2">{store.status}</td>
            <td className="p-2" onClick={(e) => { e.stopPropagation(); onEditClick(store); }}>
              <FontAwesomeIcon icon={faEdit} className="text-blue-500" />
            </td>
          </tr>
        ))}
      </tbody>
    </table>
  </div>
);

export default App;
