{
  "displayName": "Pub/Sub Topic - Publish Failure Rate >= 1% (per topic)",
  "combiner": "OR",
  "enabled": true,
  "notificationChannels": ["channels/XXXXXXXXXXXX"],
  "documentation": {
    "content": "Failure rate >= 1% on topic ${resource.topic_id}. Investigate publisher logs, quotas, and permissions.\nStore: extract with regex store-(\\d{4}) from ${resource.topic_id}.",
    "mimeType": "text/markdown"
  },
  "conditions": [{
    "displayName": "Failure rate >= 1%",
    "conditionMonitoringQueryLanguage": {
      "query": "fetch pubsub_topic\n| metric 'pubsub.googleapis.com/topic/send_message_operation_count'\n| filter resource.topic_id =~ \"store-[0-9]+-topic\"\n| align rate(5m)\n| group_by [resource.topic_id, metric.response_code], sum\n| pivot value_by=metric.response_code\n| value (if has(\"ERROR\") then ERROR else 0) / ((if has(\"OK\") then OK else 0) + (if has(\"ERROR\") then ERROR else 0)) * 100\n| group_by [resource.topic_id], mean",
      "duration": "600s",
      "trigger": {"count": 1},
      "evaluationMissingData": "EVALUATION_MISSING_DATA_INACTIVE",
      "comparison": "COMPARISON_GT",
      "thresholdValue": 1
    }
  }],
  "alertStrategy": { "autoClose": "3600s" },
  "severity": "SEVERITY_WARNING"
}
///////
{
  "displayName": "Pub/Sub Topic - p95 Publish Latency >= 2s (per topic)",
  "combiner": "OR",
  "enabled": true,
  "notificationChannels": ["channels/XXXXXXXXXXXX"],
  "documentation": {
    "content": "p95 publish latency high on ${resource.topic_id}. Check client networking, batching, and Pub/Sub regional health.",
    "mimeType": "text/markdown"
  },
  "conditions": [{
    "displayName": "p95 publish latency >= 2s",
    "conditionMonitoringQueryLanguage": {
      "query": "fetch pubsub_topic\n| metric 'pubsub.googleapis.com/topic/send_message_operation_latency'\n| filter resource.topic_id =~ \"store-[0-9]+-topic\"\n| align delta(60s)\n| group_by [resource.topic_id], 95th_percentile(value.latency)",
      "duration": "600s",
      "trigger": {"count": 1},
      "evaluationMissingData": "EVALUATION_MISSING_DATA_INACTIVE",
      "comparison": "COMPARISON_GT",
      "thresholdValue": 2.0
    }
  }],
  "alertStrategy": { "autoClose": "3600s" },
  "severity": "SEVERITY_WARNING"
}
////////
{
  "displayName": "Pub/Sub Subscription - Backlog >= 100k (per sub)",
  "combiner": "OR",
  "enabled": true,
  "notificationChannels": ["channels/XXXXXXXXXXXX"],
  "documentation": {
    "content": "Undelivered messages >= 100k on ${resource.subscription_id}. Consumers likely stalled.\nStore: regex store-(\\d{4}).",
    "mimeType": "text/markdown"
  },
  "conditions": [{
    "displayName": "Backlog >= 100k",
    "conditionMonitoringQueryLanguage": {
      "query": "fetch pubsub_subscription\n| metric 'pubsub.googleapis.com/subscription/num_undelivered_messages'\n| filter resource.subscription_id =~ \"store-[0-9]+-sub\"\n| align next_older(300s)\n| group_by [resource.subscription_id], mean",
      "duration": "900s",
      "trigger": {"count": 1},
      "evaluationMissingData": "EVALUATION_MISSING_DATA_INACTIVE",
      "comparison": "COMPARISON_GT",
      "thresholdValue": 100000
    }
  }],
  "alertStrategy": { "autoClose": "3600s" },
  "severity": "SEVERITY_ERROR"
}
///////
{
  "displayName": "Pub/Sub Subscription - Oldest Message Age >= 15m (per sub)",
  "combiner": "OR",
  "enabled": true,
  "notificationChannels": ["channels/XXXXXXXXXXXX"],
  "documentation": {
    "content": "Oldest unacked message age >= 15m on ${resource.subscription_id}. Check consumer health and throughput.",
    "mimeType": "text/markdown"
  },
  "conditions": [{
    "displayName": "Oldest age >= 900s",
    "conditionMonitoringQueryLanguage": {
      "query": "fetch pubsub_subscription\n| metric 'pubsub.googleapis.com/subscription/oldest_unacked_message_age'\n| filter resource.subscription_id =~ \"store-[0-9]+-sub\"\n| align next_older(60s)\n| group_by [resource.subscription_id], mean",
      "duration": "600s",
      "trigger": {"count": 1},
      "evaluationMissingData": "EVALUATION_MISSING_DATA_INACTIVE",
      "comparison": "COMPARISON_GT",
      "thresholdValue": 900
    }
  }],
  "alertStrategy": { "autoClose": "3600s" },
  "severity": "SEVERITY_ERROR"
}
////////
{
  "displayName": "Pub/Sub Subscription - Ack Rate ~ 0 (per sub)",
  "combiner": "OR",
  "enabled": true,
  "notificationChannels": ["channels/XXXXXXXXXXXX"],
  "documentation": {
    "content": "Ack rate ~0 on ${resource.subscription_id}. Consumer may be down or blocked.",
    "mimeType": "text/markdown"
  },
  "conditions": [{
    "displayName": "Ack rate <= 0.1 msg/s",
    "conditionMonitoringQueryLanguage": {
      "query": "fetch pubsub_subscription\n| metric 'pubsub.googleapis.com/subscription/ack_message_count'\n| filter resource.subscription_id =~ \"store-[0-9]+-sub\"\n| align rate(60s)\n| group_by [resource.subscription_id], mean",
      "duration": "600s",
      "trigger": {"count": 1},
      "evaluationMissingData": "EVALUATION_MISSING_DATA_INACTIVE",
      "comparison": "COMPARISON_LT",
      "thresholdValue": 0.1
    }
  }],
  "alertStrategy": { "autoClose": "3600s" },
  "severity": "SEVERITY_WARNING"
}
////////
{
  "displayName": "Pub/Sub Subscription - DLQ Traffic > 0 (per sub)",
  "combiner": "OR",
  "enabled": true,
  "notificationChannels": ["channels/XXXXXXXXXXXX"],
  "documentation": {
    "content": "Messages routed to DLQ on ${resource.subscription_id}. Inspect DLQ topic and consumer errors.",
    "mimeType": "text/markdown"
  },
  "conditions": [{
    "displayName": "DLQ rate > 0",
    "conditionMonitoringQueryLanguage": {
      "query": "fetch pubsub_subscription\n| metric 'pubsub.googleapis.com/subscription/dead_letter_message_count'\n| filter resource.subscription_id =~ \"store-[0-9]+-sub\"\n| align rate(60s)\n| group_by [resource.subscription_id], sum",
      "duration": "300s",
      "trigger": {"count": 1},
      "evaluationMissingData": "EVALUATION_MISSING_DATA_INACTIVE",
      "comparison": "COMPARISON_GT",
      "thresholdValue": 0
    }
  }],
  "alertStrategy": { "autoClose": "3600s" },
  "severity": "SEVERITY_WARNING"
}
/////////
{
  "displayName": "Service Health - Pub/Sub API 5xx >= 1% (project-wide)",
  "combiner": "OR",
  "enabled": true,
  "notificationChannels": ["channels/XXXXXXXXXXXX"],
  "documentation": {
    "content": "Increased Pub/Sub API 5xx responses. Possible service incident or regional issue.",
    "mimeType": "text/markdown"
  },
  "conditions": [{
    "displayName": "5xx >= 1% of total",
    "conditionMonitoringQueryLanguage": {
      "query": "fetch serviceruntime_consumer\n| metric 'serviceruntime.googleapis.com/api/request_count'\n| filter resource.service == \"pubsub.googleapis.com\"\n| align rate(60s)\n| group_by [metric.response_code_class], sum\n| pivot value_by=metric.response_code_class\n| value (if has(\"5xx\") then `5xx` else 0) / ((if has(\"2xx\") then `2xx` else 0) + (if has(\"4xx\") then `4xx` else 0) + (if has(\"5xx\") then `5xx` else 0)) * 100\n| group_by [], mean",
      "duration": "180s",
      "trigger": {"count": 1},
      "evaluationMissingData": "EVALUATION_MISSING_DATA_INACTIVE",
      "comparison": "COMPARISON_GT",
      "thresholdValue": 1
    }
  }],
  "alertStrategy": { "autoClose": "3600s" },
  "severity": "SEVERITY_WARNING"
}
//////
{
  "displayName": "Quota - Topic Count Utilization >= 80%",
  "combiner": "OR",
  "enabled": true,
  "notificationChannels": ["channels/XXXXXXXXXXXX"],
  "documentation": {
    "content": "Topic count usage >= 80% of limit. Consider sharding to another project or requesting quota increase.",
    "mimeType": "text/markdown"
  },
  "conditions": [{
    "displayName": "Topic utilization >= 80%",
    "conditionMonitoringQueryLanguage": {
      "query": "let usage = fetch serviceruntime_consumer\n  | metric 'serviceruntime.googleapis.com/quota/allocation/usage'\n  | filter resource.service == \"pubsub.googleapis.com\"\n  | filter metric.quota_metric == \"pubsub.googleapis.com/topic_count\"\n  | align next_older(300s)\n  | group_by [], mean;\n\nlet limit = fetch serviceruntime_consumer\n  | metric 'serviceruntime.googleapis.com/quota/allocation/limit'\n  | filter resource.service == \"pubsub.googleapis.com\"\n  | filter metric.quota_metric == \"pubsub.googleapis.com/topic_count\"\n  | align next_older(300s)\n  | group_by [], mean;\n\njoin (usage), (limit)\n| value val(0) / val(1) * 100",
      "duration": "600s",
      "trigger": {"count": 1},
      "evaluationMissingData": "EVALUATION_MISSING_DATA_INACTIVE",
      "comparison": "COMPARISON_GT",
      "thresholdValue": 80
    }
  }],
  "alertStrategy": { "autoClose": "3600s" },
  "severity": "SEVERITY_WARNING"
}
