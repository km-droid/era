import React from 'react'
import { TooltipProps } from 'recharts'
import { Card, CardContent } from '@/components/ui/card'

interface ChartConfig {
  [key: string]: {
    label: string
    color: string
  }
}

interface ChartContainerProps {
  config: ChartConfig
  children: React.ReactNode
  className?: string
}

export const ChartContainer: React.FC<ChartContainerProps> = ({
  config,
  children,
  className,
}) => {
  return (
    <div className={className}>
      <style jsx>{`
        :root {
          ${Object.entries(config)
            .map(([key, value]) => `--color-${key}: ${value.color};`)
            .join('\n')}
        }
      `}</style>
      {children}
    </div>
  )
}

export const ChartTooltip: React.FC<TooltipProps<any, any>> = ({ active, payload, label }) => {
  if (active && payload && payload.length) {
    return (
      <Card>
        <CardContent className="p-2">
          <p className="font-bold">{label}</p>
          {payload.map((entry, index) => (
            <p key={`item-${index}`} style={{ color: entry.color }}>
              {entry.name}: {entry.value}
            </p>
          ))}
        </CardContent>
      </Card>
    )
  }

  return null
}

export const ChartTooltipContent: React.FC<TooltipProps<any, any>> = ({ active, payload }) => {
  if (active && payload && payload.length) {
    return (
      <Card>
        <CardContent className="p-2">
          {payload.map((entry, index) => (
            <p key={`item-${index}`} style={{ color: entry.color }}>
              {entry.name}: {entry.value}
            </p>
          ))}
        </CardContent>
      </Card>
    )
  }

  return null
}
