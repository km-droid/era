// src/pages/api/stores/index.ts
import { NextApiRequest, NextApiResponse } from 'next'
import { Datastore } from '@google-cloud/datastore'

const datastore = new Datastore()

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  if (req.method === 'GET') {
    try {
      const query = datastore.createQuery('Store')
      const [stores] = await datastore.runQuery(query)
      const formattedStores = stores.map(store => ({
        id: store[datastore.KEY].id,
        ...store
      }))
      res.status(200).json(formattedStores)
    } catch (error) {
      console.error('Error fetching stores:', error)
      res.status(500).json({ error: 'Error fetching stores' })
    }
  } else if (req.method === 'POST') {
    try {
      const { storeNo, name, address, manager, contactEmail, contactPhone, size, annualRevenue, rolloutPhase, status } = req.body
      const storeKey = datastore.key('Store')
      const store = {
        key: storeKey,
        data: {
          storeNo,
          name,
          address,
          manager,
          contactEmail,
          contactPhone,
          size,
          annualRevenue,
          rolloutPhase,
          status,
          createdAt: new Date(),
          updatedAt: new Date()
        }
      }
      await datastore.save(store)
      res.status(201).json({ id: storeKey.id, ...store.data })
    } catch (error) {
      console.error('Error creating store:', error)
      res.status(500).json({ error: 'Error creating store' })
    }
  } else {
    res.status(405).json({ error: 'Method not allowed' })
  }
}
