#!/usr/bin/env bash
set -euo pipefail

PROJECT_ID="your-project-id"
OUTPUT_CSV="notebook_types.csv"

echo "instance,region,type,zone" > "$OUTPUT_CSV"

# Discover all Notebook API regions available to the project
REGIONS=$(gcloud notebooks locations list \
  --project="$PROJECT_ID" \
  --format="value(locationId)")

for REGION in $REGIONS; do
  echo "Listing instances in $REGION ..."
  INSTANCES=$(gcloud notebooks instances list \
    --project="$PROJECT_ID" \
    --location="$REGION" \
    --format="value(name)" || true)

  [[ -z "${INSTANCES}" ]] && continue

  for INSTANCE in $INSTANCES; do
    echo "  Checking $INSTANCE in $REGION ..."
    DESCRIBE_OUT=$(gcloud notebooks instances describe "$INSTANCE" \
      --project="$PROJECT_ID" \
      --location="$REGION" \
      --format="yaml(vmImage,containerImage,proxyUri)" || true)

    TYPE="UNKNOWN"
    ZONE=""

    if [[ -n "$DESCRIBE_OUT" ]]; then
      if echo "$DESCRIBE_OUT" | grep -q '^vmImage:'; then
        TYPE="USER_MANAGED"
      elif echo "$DESCRIBE_OUT" | grep -q '^containerImage:' || echo "$DESCRIBE_OUT" | grep -q '^proxyUri:'; then
        TYPE="MANAGED"
      fi
    fi

    # If it's user-managed, try to find the underlying GCE VM zone by name
    if [[ "$TYPE" == "USER_MANAGED" ]]; then
      # Note: user-managed Workbench VMs are regular GCE instances in your project
      # We search all zones for an instance with this name and grab its zone basename.
      ZONE=$(gcloud compute instances list \
        --project="$PROJECT_ID" \
        --filter="name=('${INSTANCE}')" \
        --format="value(zone.basename())" \
        2>/dev/null | head -n1 || true)

      # If name-collisions or custom naming exist, refine the filter (e.g., by label) as needed.
    fi

    echo "    â†’ $INSTANCE = $TYPE ${ZONE:+(zone: $ZONE)}"
    echo "$INSTANCE,$REGION,$TYPE,$ZONE" >> "$OUTPUT_CSV"
  done
done

echo
echo "Report written to $OUTPUT_CSV"
