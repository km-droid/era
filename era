#!/usr/bin/env bash
set -euo pipefail

PROJECT_ID="your-project-id"
OUTPUT_CSV="notebook_types.csv"

echo "instance,region,type" > "$OUTPUT_CSV"

# Dynamically discover regions where Notebook API is available
REGIONS=$(gcloud notebooks locations list \
  --project="$PROJECT_ID" \
  --format="value(locationId)")

for REGION in $REGIONS; do
  echo "Listing instances in $REGION ..."
  
  INSTANCES=$(gcloud notebooks instances list \
    --project="$PROJECT_ID" \
    --location="$REGION" \
    --format="value(name)" || true)

  if [[ -z "$INSTANCES" ]]; then
    continue
  fi

  for INSTANCE in $INSTANCES; do
    echo "  Checking $INSTANCE in $REGION ..."
    DESCRIBE_OUT=$(gcloud notebooks instances describe "$INSTANCE" \
      --project="$PROJECT_ID" \
      --location="$REGION" \
      --format="yaml(vmImage,containerImage,proxyUri)" || true)

    if [[ -z "$DESCRIBE_OUT" ]]; then
      TYPE="UNKNOWN"
    elif echo "$DESCRIBE_OUT" | grep -q '^vmImage:'; then
      TYPE="USER_MANAGED"
    elif echo "$DESCRIBE_OUT" | grep -q '^containerImage:' || echo "$DESCRIBE_OUT" | grep -q '^proxyUri:'; then
      TYPE="MANAGED"
    else
      TYPE="UNKNOWN"
    fi

    echo "    â†’ $INSTANCE = $TYPE"
    echo "$INSTANCE,$REGION,$TYPE" >> "$OUTPUT_CSV"
  done
done

echo
echo "Report written to $OUTPUT_CSV"
