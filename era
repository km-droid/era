package main

import (
	"context"
	"fmt"
	"log"

	compute "cloud.google.com/go/compute/apiv1"
	"github.com/golang/protobuf/proto" // or use "google.golang.org/protobuf/proto" in newer code
	computepb "google.golang.org/genproto/googleapis/cloud/compute/v1"
)

func main() {
	ctx := context.Background()

	// Create a client for interacting with the Compute Engine URL Maps API
	urlMapClient, err := compute.NewRegionUrlMapsRESTClient(ctx)
	if err != nil {
		log.Fatalf("Failed to create URL Maps client: %v", err)
	}
	defer urlMapClient.Close()

	// Specify your GCP project and region
	projectID := "my-gcp-project"
	region := "us-central1"

	// The name of the existing URL map resource used by your internal HTTP(S) LB
	urlMapName := "my-ilb-urlmap"

	// Construct a UrlMap object with Fault Injection settings in the default route action
	// (You could also apply fault injection to specific pathMatchers / routeRules if desired.)
	updatedUrlMap := &computepb.UrlMap{
		Name: proto.String(urlMapName),
		// Add or modify the default Route Action
		DefaultRouteAction: &computepb.HttpRouteAction{
			FaultInjectionPolicy: &computepb.HttpFaultInjection{
				// Introduce a 2-second delay in 50% of requests
				Delay: &computepb.HttpFaultDelay{
					FixedDelay: &computepb.Duration{Seconds: proto.Int64(2)},
					Percentage: proto.Float64(50),
				},
				// Abort with HTTP 503 in 10% of requests
				Abort: &computepb.HttpFaultAbort{
					HttpStatus: proto.Int64(503),
					Percentage: proto.Float64(10),
				},
			},
		},
	}

	// Patch the existing region URL map with the new fault injection config
	op, err := urlMapClient.Patch(ctx, &computepb.PatchRegionUrlMapRequest{
		Project:        projectID,
		Region:         region,
		UrlMap:         urlMapName,
		UrlMapResource: updatedUrlMap,
	})
	if err != nil {
		log.Fatalf("Patch request failed: %v", err)
	}

	// Wait for the patch operation to complete
	err = op.Wait(ctx)
	if err != nil {
		log.Fatalf("Error while waiting for patch operation to complete: %v", err)
	}

	fmt.Println("Successfully updated URL map with fault injection settings.")
}
